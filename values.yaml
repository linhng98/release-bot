---
# Default values for helm-template.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

kind: Deployment

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.1.0

envFrom: []

sidecarContainers:
  - name: image_ecr
    image: image_ecr:tag_b
    command: ['sh', '-c', 'echo "Hello, Kubernetes!" && sleep 3600']
  - name: image_hub
    image: 'image_hub: tag_c'
    command: ['sh', '-c', 'echo "Hello, Kubernetes!" && sleep 3600']

initContainers: []

fluentd:
  enabled: false
#  image: <FLUENTD_IMAGE>
#  port: 24224

strategy:
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

additionLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

sealedSecrets:
  enabled: false
  annotations: {}
  encryptedData: {}
#    mapFile:
#      - mountPath: /etc/secret
#        name: awssecret
#        files:
#          - name: aws-bucket-secret.json
#            value: aws-bucket-cred
#            path: /aws
#          - name: aws-test-secret.json
#            value: aws-test-cred
#            path: /aws
#      - mountPath: /config/secret
#        name: gcpsecret
#        files:
#          - name: gcp-secret.json
#            value: OK
#            path: /gcp
#   mapEnv: []
#      - name : SECRET
#        value: OK
  secretMetadata:
    labels: {}
    annotations: {}

env: {}
  #LOCAL_IP_BINDING: 0.0.0.0
  #LISTEN_PORT: 8080
  #GOOGLE_APPLICATION_CREDENTIALS: credentials/service_accounts/lotusfarm-cdn.json
  #SERVICE_DOMAIN: https://storage.googleapis.com/lotusfarm-cd

configmap: {}

configmapLabels: {}

mountConfigmap: []
#  - name: file.json
#    path: /config/file.json

persistentVolume:
  enabled: false
  accessModes: [ReadWriteOnce]
  storageClassName:
  size: 1Gi
  mountPath: /path/to/dir

mountVolumes: []
#  - name: test-claim
#    mountPath: /data

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
